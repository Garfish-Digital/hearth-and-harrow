---

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Hearth & Harrow - Authentic Pagan & Occult Supplies for Modern Practitioners" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <meta name="description" content={description}>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <meta property="og:title" content={title}>
  <meta property="og:description" content={description}>
  <meta property="og:url" content="https://hearthandharrow.netlify.app">
  <meta property="og:type" content="website">
  <meta name="robots" content="noindex, nofollow" />
  
  <!-- Font Awesome Pro CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
  <nav class="main-nav">
    <div class="container">
      <div class="nav-content">
        <h3 class="hero-title">Hearth & Harrow</h3>
        <ul class="nav-links">
          <li><a href="/">Home</a></li>
          <li><a href="/shop">Shop</a></li>
          <li><a href="/about">About Us</a></li>
          <li><a href="/contact">Contact</a></li>
        </ul>
        <button class="mobile-menu-toggle">
          <span></span>
          <span></span>
          <span></span>
        </button>
      </div>
    </div>
  </nav>

  <main>
    <slot />
  </main>

  <footer class="main-footer">
    <div class="container">
      <div class="footer-content">
        <div class="footer-section">
          <h3 class="scroll-animate" data-animation="bounceInLeft" data-delay="0">Hearth & Harrow</h3>
          <p>Authentic tools for your spiritual journey</p>
        </div>
        <div class="footer-section">
          <h4>Quick Links</h4>
          <ul>
            <li><a href="/shop">Shop</a></li>
            <li><a href="/about">About</a></li>
            <li><a href="/contact">Contact</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h4>Categories</h4>
          <ul>
            <li><a href="/shop/herbs-resins">Herbs & Resins</a></li>
            <li><a href="/shop/crystals">Crystals</a></li>
            <li><a href="/shop/divination">Divination Tools</a></li>
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; 2024 Hearth & Harrow. A mystical demo experience.</p>
      </div>
    </div>
  </footer>

  <style lang="scss">
    @import '../styles/global.scss';

    .main-nav {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      background: rgba(255, 255, 255, 0.8);
      backdrop-filter: blur(10px);
      z-index: 1000;
      border-bottom: 1px solid rgba(168, 85, 247, 0.1);
    }

    .nav-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 0;
    }

    .logo {
      font-family: 'Playfair Display', serif;
      font-size: 1.8rem;
      font-weight: 700;
      color: var(--muted-gold);
      text-decoration: none;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .logo:hover {
      color: var(--sage-green);
    }

    .nav-links {
      display: flex;
      list-style: none;
      gap: 2rem;
      align-items: center;
    }

    .nav-links a {
      color: var(--text-gray);
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 1px;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      transition: all 0.3s ease;
    }

    .nav-links a:hover {
      background: rgba(168, 85, 247, 0.1);
      color: var(--crayola-purple);
    }

    .nav-links a.active {
      color: var(--crayola-purple);
    }


    .mobile-menu-toggle {
      display: none;
      flex-direction: column;
      gap: 4px;
      background: none;
      border: none;
      cursor: pointer;
    }

    .mobile-menu-toggle span {
      width: 25px;
      height: 3px;
      background: var(--muted-gold);
      transition: all 0.3s ease;
    }

    main {
      margin-top: 80px;
      min-height: calc(100vh - 80px);
    }

    .main-footer {
      background: var(--mystical-gradient);
      padding: 3rem 0 1rem;
      margin-top: 4rem;
    }

    .footer-content {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      margin-bottom: 2rem;
    }

    .footer-section h3,
    .footer-section h4 {
      color: var(--peaceful-purple);
      margin-bottom: 1rem;
      font-family: 'Playfair Display', serif;
    }

    .footer-section ul {
      list-style: none;
    }

    .footer-section ul li {
      margin-bottom: 0.5rem;
    }

    .footer-section a {
      color: var(--moonlight-silver);
      transition: color 0.3s ease;
    }

    .footer-section a:hover {
      color: var(--sage-green);
    }

    .footer-bottom {
      text-align: center;
      padding-top: 2rem;
      border-top: 1px solid rgba(184, 148, 95, 0.2);
      color: var(--sage-green);
    }

    // Animation styles now handled globally in global.scss

    @media (max-width: 768px) {
      .nav-links {
        display: none;
      }

      .mobile-menu-toggle {
        display: flex;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
      }
    }
  </style>

  <script>
    // Set active nav link based on current page
    document.addEventListener('DOMContentLoaded', function() {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll('.nav-links a');
      
      navLinks.forEach(link => {
        const linkPath = new URL((link as HTMLAnchorElement).href).pathname;
        if (currentPath === linkPath || (currentPath === '/' && linkPath === '/')) {
          link.classList.add('active');
        }
      });
    });

    // Intersection Observer for scroll-triggered animations
    document.addEventListener('DOMContentLoaded', function() {
      const observerOptions = {
        threshold: 0.3, // Trigger when 30% of element is visible
        rootMargin: '0px 0px -50px 0px' // Trigger slightly before element enters viewport
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const element = entry.target as HTMLElement;
            const animationType = element.dataset.animation;
            const delay = parseInt(element.dataset.delay || '0') || 0;

            // Use setTimeout to stagger animation timing
            setTimeout(() => {
              element.classList.add('animate');
              element.classList.add(`animate__${animationType}`);
            }, delay);

            // Stop observing this element after animation triggers
            observer.unobserve(element);
          }
        });
      }, observerOptions);

      // Observe all elements with scroll-animate class
      const animateElements = document.querySelectorAll('.scroll-animate');
      animateElements.forEach((element) => {
        observer.observe(element);
      });
    });
  </script>
</body>
</html>