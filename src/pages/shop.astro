---
import BaseLayout from '../layouts/BaseLayout.astro';
import productsData from '../../data/products.json';

// Get all products for the bento box showcase
const allProducts = productsData.products;
const categories = productsData.categories;
---

<BaseLayout title="Shop - Hearth & Harrow" description="Explore our mystical collections of herbs, crystals, and divination tools">
  <!-- Hero Section -->
  <section class="shop-hero">
    <div class="container">
      <div class="hero-content">
        <h1>Sacred Marketplace</h1>
        <p>Discover authentic tools and supplies for your spiritual practice</p>
      </div>
    </div>
  </section>

  <!-- Category Grid -->
  <section class="shop-categories">
    <div class="container">
      <div class="categories-grid">
        {categories.map(category => {
          const categoryProducts = productsData.products.filter(p => p.category === category.id);
          return (
            <a href={`/shop/${category.id}`} class="category-card mystical-card large-card">
              <div class={`card-background ${category.id}-bg`}></div>
              <div class="card-content">
                <div class="card-icon">{category.icon}</div>
                <h2>{category.name}</h2>
                <p>{category.description}</p>
                <span class="item-count">{categoryProducts.length} Items</span>
              </div>
            </a>
          );
        })}
      </div>
    </div>
  </section>

  <!-- Featured Products -->
  <section class="featured-products">
    <div class="container">
      <h2 class="scroll-animate" data-animation="bounceInUp" data-delay="0">Featured Treasures</h2>
      
      <!-- Filter Buttons -->
      <div class="filter-buttons">
        <button class="filter-btn active scroll-animate" data-filter="all" data-animation="bounceInLeft" data-delay="0">All Products</button>
        <button class="filter-btn scroll-animate" data-filter="herbs-resins" data-animation="bounceInLeft" data-delay="350">Herbs & Resins</button>
        <button class="filter-btn scroll-animate" data-filter="crystals" data-animation="bounceInRight" data-delay="0">Crystals</button>
        <button class="filter-btn scroll-animate" data-filter="divination" data-animation="bounceInRight" data-delay="350">Divination</button>
      </div>

      <!-- Products Bento Grid -->
      <div class="products-bento-grid" id="products-grid">
        {allProducts.map(product => {
          const categoryName = categories.find(c => c.id === product.category)?.name || product.category;
          return (
            <div class={`product-card bento-item scroll-animate`} data-category={product.category} data-animation="gentleBounceIn" data-delay="0">
              <div class="product-image">
                <div class={`product-placeholder ${product.placeholder}`}></div>
              </div>
              <div class="product-info">
                <h3>{product.name}</h3>
                <p class="product-category">{categoryName}</p>
                <p class="product-price">${product.price}</p>
                <button class="add-to-cart-btn" data-product={product.name} data-price={product.price.toString()}>Add to Cart</button>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>

  <!-- Shopping Cart -->
  <div id="shopping-cart" class="shopping-cart">
    <div class="cart-header">
      <h3>Sacred Cart</h3>
      <button id="close-cart" class="close-cart">Ã—</button>
    </div>
    <div class="cart-items" id="cart-items">
      <p class="empty-cart">Your cart is empty</p>
    </div>
    <div class="cart-footer">
      <div class="cart-total">
        <strong>Total: $<span id="cart-total">0.00</span></strong>
      </div>
      <button id="checkout-btn" class="checkout-btn">Proceed to Checkout</button>
    </div>
  </div>

  <!-- Cart Toggle Button -->
  <button id="cart-toggle" class="cart-toggle">
    ðŸ›’ <span id="cart-count">0</span>
  </button>
</BaseLayout>

<style lang="scss">
  @import '../styles/global.scss';

  .shop-hero {
    padding: 8rem 0 4rem;
    background: var(--mystical-gradient);
    text-align: center;
  }

  .hero-content h1 {
    font-size: 3.5rem;
    margin-bottom: 1rem;
  }

  .hero-content p {
    font-size: 1.3rem;
    color: var(--sage-green);
  }

  .shop-categories {
    padding: 6rem 0;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .large-card {
    position: relative;
    min-height: 300px;
    padding: 3rem;
    overflow: hidden;
    text-decoration: none;
    color: var(--pure-white);
    background: var(--crayola-purple);
    border-radius: 15px;
  }

  .large-card:hover {
    color: inherit;
  }

  .card-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.1;
    transition: opacity 0.3s ease;
  }

  .large-card:hover .card-background {
    opacity: 0.2;
  }

  .herbs-resins-bg {
    background: radial-gradient(circle, var(--crayola-green), transparent);
  }

  .crystals-bg {
    background: radial-gradient(circle, var(--crayola-purple), transparent);
  }

  .divination-bg {
    background: radial-gradient(circle, var(--crayola-blue), transparent);
  }

  .ritual-bg {
    background: radial-gradient(circle, var(--muted-gold), transparent);
  }

  .card-content {
    position: relative;
    z-index: 2;
  }

  .card-content .card-icon {
    font-size: 4rem;
    margin-bottom: 1.5rem;
    display: block;
  }

  .card-content h2 {
    margin-bottom: 1rem;
    font-size: 2rem;
    color: var(--pure-white) !important;
    background: none !important;
    -webkit-background-clip: initial !important;
    -webkit-text-fill-color: var(--pure-white) !important;
    background-clip: initial !important;
  }

  .card-content p {
    margin-bottom: 2rem;
    font-size: 1.1rem;
    line-height: 1.6;
  }

  .item-count {
    color: var(--muted-gold);
    font-weight: 500;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .featured-products {
    padding: 6rem 0;
    background: var(--crayola-purple);
  }

  .featured-products h2 {
    text-align: center;
    margin-bottom: 4rem;
    font-size: 3rem;
    color: var(--pure-white) !important;
    background: none !important;
    -webkit-background-clip: initial !important;
    -webkit-text-fill-color: var(--pure-white) !important;
    background-clip: initial !important;
  }

  // Filter Buttons
  .filter-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 3rem;
    flex-wrap: wrap;
  }

  .filter-btn {
    padding: 0.75rem 1.5rem;
    background: transparent;
    border: 2px solid var(--crayola-orange);
    color: var(--light-gray);
    border-radius: 50px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
  }

  .filter-btn:hover,
  .filter-btn.active {
    background: var(--crayola-orange);
    color: var(--pure-white);
    transform: translateY(-2px);
  }

  // Bento Box Grid System
  .products-bento-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    padding: 1rem 0;
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
  }

  .product-card {
    background: var(--pure-white);
    border-radius: 24px;
    overflow: hidden;
    border: 1px solid rgba(168, 85, 247, 0.05);
    box-shadow: var(--shadow-soft);
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
    transform-origin: center;
  }

  .product-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: var(--shadow-colored);
    border-color: var(--crayola-purple);
  }

  .product-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--rainbow-gradient);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .product-card:hover::before {
    opacity: 1;
  }

  // Filter animation states
  .product-card.hidden {
    opacity: 0;
    transform: scale(0.8);
    pointer-events: none;
  }

  .product-card.visible {
    opacity: 1;
    transform: scale(1);
    pointer-events: all;
  }

  .product-image {
    height: 200px;
    position: relative;
    overflow: hidden;
  }

  .product-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    color: var(--muted-gold);
    position: relative;
  }

  .sage-placeholder {
    background: linear-gradient(45deg, var(--forest-green), var(--sage-green));
  }

  .amethyst-placeholder {
    background: linear-gradient(45deg, var(--rich-purple), #8a5aa8);
  }

  .tarot-placeholder {
    background: linear-gradient(45deg, var(--deep-forest-blue), var(--rich-purple));
  }

  .pendant-placeholder {
    background: linear-gradient(45deg, var(--muted-gold), var(--natural-wood));
  }

  .frankincense-placeholder {
    background: linear-gradient(45deg, var(--earth-brown), var(--natural-wood));
  }

  .quartz-placeholder {
    background: linear-gradient(45deg, #ffffff20, var(--moonlight-silver));
  }

  // Additional product placeholders
  .lavender-placeholder {
    background: linear-gradient(45deg, #8B7FC7, #C9A9DD);
  }

  .dragons-blood-placeholder {
    background: linear-gradient(45deg, #8B0000, #CD5C5C);
  }

  .palo-santo-placeholder {
    background: linear-gradient(45deg, #8B7355, #D2B48C);
  }

  .mugwort-placeholder {
    background: linear-gradient(45deg, #556B2F, #9ACD32);
  }

  .copal-placeholder {
    background: linear-gradient(45deg, #DAA520, #FFD700);
  }

  .cedar-placeholder {
    background: linear-gradient(45deg, #A0522D, #CD853F);
  }

  .rose-placeholder {
    background: linear-gradient(45deg, #DC143C, #FFB6C1);
  }

  .myrrh-placeholder {
    background: linear-gradient(45deg, #8B4513, #F4A460);
  }

  .juniper-placeholder {
    background: linear-gradient(45deg, #2F4F4F, #708090);
  }

  .benzoin-placeholder {
    background: linear-gradient(45deg, #DEB887, #F5DEB3);
  }

  .rose-quartz-placeholder {
    background: linear-gradient(45deg, #F8BBD9, #FFE4E1);
  }

  .tourmaline-placeholder {
    background: linear-gradient(45deg, #2F2F2F, #4F4F4F);
  }

  .selenite-placeholder {
    background: linear-gradient(45deg, #F5F5F5, #FFFFFF);
  }

  .labradorite-placeholder {
    background: linear-gradient(45deg, #2F4F4F, #4682B4);
  }

  .citrine-placeholder {
    background: linear-gradient(45deg, #FFD700, #FFA500);
  }

  .moonstone-placeholder {
    background: linear-gradient(45deg, #E6E6FA, #F0F8FF);
  }

  .hematite-placeholder {
    background: linear-gradient(45deg, #36454F, #708090);
  }

  .garnet-placeholder {
    background: linear-gradient(45deg, #8B0000, #DC143C);
  }

  .fluorite-placeholder {
    background: linear-gradient(45deg, #32CD32, #90EE90);
  }

  .obsidian-placeholder {
    background: linear-gradient(45deg, #000000, #2F2F2F);
  }

  .crystal-ball-placeholder {
    background: linear-gradient(45deg, #F0F8FF, #E6E6FA);
  }

  .runes-placeholder {
    background: linear-gradient(45deg, #8B4513, #D2691E);
  }

  .chalice-placeholder {
    background: linear-gradient(45deg, #B8860B, #FFD700);
  }

  .wand-placeholder {
    background: linear-gradient(45deg, #CD853F, #F4A460);
  }

  .cauldron-placeholder {
    background: linear-gradient(45deg, #2F2F2F, #696969);
  }

  .oracle-placeholder {
    background: linear-gradient(45deg, #191970, #4B0082);
  }

  .pendulum-placeholder {
    background: linear-gradient(45deg, #9370DB, #DDA0DD);
  }

  .athame-placeholder {
    background: linear-gradient(45deg, #C0C0C0, #2F2F2F);
  }

  .goddess-placeholder {
    background: linear-gradient(45deg, #F5DEB3, #DEB887);
  }

  .cloth-placeholder {
    background: linear-gradient(45deg, #000000, #4B0082);
  }

  .product-info {
    padding: 1.5rem;
  }

  .product-info h3 {
    margin-bottom: 0.5rem;
    color: var(--muted-gold);
    font-size: 1.3rem;
  }

  .product-category {
    color: var(--sage-green);
    font-size: 0.9rem;
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .product-price {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--muted-gold);
    margin-bottom: 1.5rem;
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 0.75rem;
    background: var(--ethereal-gradient);
    color: var(--moonlight-silver);
    border: none;
    border-radius: 30px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .add-to-cart-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(184, 148, 95, 0.3);
  }

  // Shopping Cart Styles
  .shopping-cart {
    position: fixed;
    top: 0;
    right: -400px;
    width: 400px;
    height: 100vh;
    background: var(--mystical-gradient);
    border-left: 2px solid var(--muted-gold);
    z-index: 2000;
    transition: right 0.3s ease;
    display: flex;
    flex-direction: column;
  }

  .shopping-cart.open {
    right: 0;
  }

  .cart-header {
    padding: 2rem;
    border-bottom: 1px solid rgba(184, 148, 95, 0.3);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .cart-header h3 {
    color: var(--muted-gold);
    font-family: 'Playfair Display', serif;
    margin: 0;
  }

  .close-cart {
    background: none;
    border: none;
    color: var(--muted-gold);
    font-size: 2rem;
    cursor: pointer;
    line-height: 1;
  }

  .cart-items {
    flex: 1;
    padding: 1rem 2rem;
    overflow-y: auto;
  }

  .empty-cart {
    text-align: center;
    color: var(--sage-green);
    font-style: italic;
    margin-top: 2rem;
  }

  .cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    border-bottom: 1px solid rgba(184, 148, 95, 0.2);
  }

  .cart-item:last-child {
    border-bottom: none;
  }

  .item-info h4 {
    color: var(--muted-gold);
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
  }

  .item-price {
    color: var(--sage-green);
    font-weight: 500;
  }

  .remove-item {
    background: none;
    border: none;
    color: #ff6b6b;
    cursor: pointer;
    font-size: 1.2rem;
    padding: 0.5rem;
  }

  .cart-footer {
    padding: 2rem;
    border-top: 1px solid rgba(184, 148, 95, 0.3);
  }

  .cart-total {
    text-align: center;
    margin-bottom: 1.5rem;
    font-size: 1.3rem;
    color: var(--muted-gold);
  }

  .checkout-btn {
    width: 100%;
    padding: 1rem;
    background: var(--ethereal-gradient);
    color: var(--moonlight-silver);
    border: none;
    border-radius: 30px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .checkout-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(184, 148, 95, 0.3);
  }

  .cart-toggle {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: var(--ethereal-gradient);
    color: var(--moonlight-silver);
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    z-index: 1500;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  .cart-toggle:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 30px rgba(184, 148, 95, 0.4);
  }

  #cart-count {
    background: #ff6b6b;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    font-weight: bold;
    position: absolute;
    top: -5px;
    right: -5px;
  }

  @media (max-width: 768px) {
    .categories-grid {
      grid-template-columns: 1fr;
    }

    .products-grid {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }

    .shopping-cart {
      width: 100%;
      right: -100%;
    }

    .hero-content h1 {
      font-size: 2.5rem;
    }
  }
</style>

<script>
  // Shopping Cart Functionality
  let cart = [];
  let cartTotal = 0;

  function updateCartDisplay() {
    const cartItems = document.getElementById('cart-items');
    const cartCount = document.getElementById('cart-count');
    const cartTotalElement = document.getElementById('cart-total');

    if (cart.length === 0) {
      cartItems.innerHTML = '<p class="empty-cart">Your cart is empty</p>';
      cartCount.textContent = '0';
      cartTotalElement.textContent = '0.00';
    } else {
      cartItems.innerHTML = cart.map((item, index) => `
        <div class="cart-item">
          <div class="item-info">
            <h4>${item.name}</h4>
            <p class="item-price">$${item.price}</p>
          </div>
          <button class="remove-item" onclick="removeFromCart(${index})">Ã—</button>
        </div>
      `).join('');
      
      cartCount.textContent = cart.length.toString();
      cartTotalElement.textContent = cartTotal.toFixed(2);
    }
  }

  function addToCart(productName, price) {
    cart.push({ name: productName, price: parseFloat(price) });
    cartTotal += parseFloat(price);
    updateCartDisplay();
    
    // Show cart briefly
    const cartElement = document.getElementById('shopping-cart');
    cartElement.classList.add('open');
    setTimeout(() => {
      if (!cartElement.matches(':hover')) {
        cartElement.classList.remove('open');
      }
    }, 2000);
  }

  function removeFromCart(index) {
    cartTotal -= cart[index].price;
    cart.splice(index, 1);
    updateCartDisplay();
  }

  // Product Filtering Functionality
  function filterProducts(category) {
    const productCards = document.querySelectorAll('.product-card[data-category]');
    const filterButtons = document.querySelectorAll('.filter-btn');
    
    // Update active button
    filterButtons.forEach(btn => btn.classList.remove('active'));
    document.querySelector(`[data-filter="${category}"]`).classList.add('active');
    
    productCards.forEach(card => {
      const productCategory = card.getAttribute('data-category');
      
      if (category === 'all' || productCategory === category) {
        card.classList.remove('hidden');
        card.classList.add('visible');
      } else {
        card.classList.add('hidden');
        card.classList.remove('visible');
      }
    });
  }

  // Event Listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize all products as visible
    document.querySelectorAll('.product-card[data-category]').forEach(card => {
      card.classList.add('visible');
    });

    // Filter button functionality
    document.querySelectorAll('.filter-btn').forEach(button => {
      button.addEventListener('click', (e) => {
        const filter = e.target.getAttribute('data-filter');
        filterProducts(filter);
      });
    });

    // Add to cart buttons
    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
      button.addEventListener('click', (e) => {
        const productName = e.target.getAttribute('data-product');
        const price = e.target.getAttribute('data-price');
        addToCart(productName, price);
      });
    });

    // Cart toggle
    document.getElementById('cart-toggle').addEventListener('click', () => {
      document.getElementById('shopping-cart').classList.toggle('open');
    });

    // Close cart
    document.getElementById('close-cart').addEventListener('click', () => {
      document.getElementById('shopping-cart').classList.remove('open');
    });

    // Checkout button
    document.getElementById('checkout-btn').addEventListener('click', () => {
      if (cart.length === 0) {
        alert('Your cart is empty!');
        return;
      }

      // Create mystical checkout popup
      const popup = document.createElement('div');
      popup.innerHTML = `
        <div style="
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: linear-gradient(135deg, #2d5016, #1a2b3d);
          padding: 3rem;
          border-radius: 15px;
          border: 2px solid #b8945f;
          color: #e8e8e8;
          text-align: center;
          z-index: 10000;
          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
          max-width: 500px;
          animation: mysticalAppear 0.5s ease-out;
        ">
          <h3 style="color: #b8945f; margin-bottom: 1rem; font-family: 'Playfair Display', serif;">
            ðŸŒŸ Order Received ðŸŒŸ
          </h3>
          <p style="margin-bottom: 1rem; line-height: 1.6;">
            Your mystical order of ${cart.length} item(s) totaling $${cartTotal.toFixed(2)} has been received by the cosmic forces.
          </p>
          <p style="margin-bottom: 2rem; line-height: 1.6; font-style: italic; color: #9cae7c;">
            In a real store, this would process your payment and arrange shipping. 
            For now, simply know that your spiritual journey is supported by our authentic offerings.
          </p>
          <button onclick="this.parentElement.parentElement.remove(); cart = []; cartTotal = 0; updateCartDisplay(); document.getElementById('shopping-cart').classList.remove('open');" style="
            background: #b8945f;
            color: #1a1a1a;
            border: none;
            padding: 0.75rem 2rem;
            border-radius: 30px;
            cursor: pointer;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 1px;
          ">
            Continue Shopping
          </button>
        </div>
        <div style="
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.7);
          z-index: 9999;
        " onclick="this.parentElement.remove()"></div>
      `;
      
      document.body.appendChild(popup);
    });
  });

  // Add mystical appear animation if not already present
  if (!document.querySelector('#mystical-animation-styles')) {
    const style = document.createElement('style');
    style.id = 'mystical-animation-styles';
    style.textContent = `
      @keyframes mysticalAppear {
        0% {
          opacity: 0;
          transform: translate(-50%, -50%) scale(0.8);
        }
        100% {
          opacity: 1;
          transform: translate(-50%, -50%) scale(1);
        }
      }
    `;
    document.head.appendChild(style);
  }
</script>